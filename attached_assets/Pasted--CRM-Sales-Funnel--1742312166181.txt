Нужно добавить в наше приложение CRM новую вкладку «Воронка продаж» (Sales Funnel) и реализовать в ней логику обработки заявок на пробное занятие. При этом прошу учесть следующие требования и провести сразу небольшой рефакторинг, чтобы код в итоге был более структурированным:

Назначение вкладки «Воронка продаж»
В этой вкладке должны отображаться все заявки, поступающие через форму записи на пробное занятие (то есть те данные, которые приходят от TrialRequestPage и сохраняются в таблицу trial_requests).
Нужно предусмотреть фильтры или статусы заявок (например, «Новая», «Пробное назначено», «Отказ», «Записан» и т.п.), чтобы администратор мог быстро видеть, на каком этапе находится каждая заявка.
Сама вкладка «Воронка продаж» должна появиться в боковом меню (где сейчас «Ученики», «Группы», «Посещаемость» и т.д.). Название — «Воронка продаж» или «Sales Funnel».
Отображение заявок
В таблице нужно показывать основные поля заявки (ФИО ребёнка, телефон родителя, выбранная секция, желаемая дата занятия, текущий статус и т.д.).
Добавить возможность открыть карточку заявки, чтобы увидеть все детали (включая ФИО родителя, возраст ребёнка, отделение, комментарии и т.д.).
Предусмотреть кнопку или выпадающий список для изменения статуса заявки: «Новая» → «Пробное назначено» → «Отказ» → «Записан» и т.д.
После изменения статуса в БД соответствующее поле должно обновляться, а в UI — автоматически отражаться.
Рефакторинг структуры
Попросить перенести логику работы с «trial_requests» (CRUD-операции, получение данных) в отдельные хуки (например, useTrialRequests.ts) или сервисы.
В самом компоненте «SalesFunnelPage» (или «FunnelPage») оставить только UI и базовую логику управления состоянием (статусы, фильтры).
Разделить код на:
Компонент страницы (SalesFunnelPage.tsx) — отвечает за структуру и рендер.
Таблица заявок (например, компонент RequestsTable.tsx) — отрисовка списка заявок, сортировка, фильтрация.
Форма/модальное окно (если нужно изменять статус или редактировать данные заявки).
Хук (например, useTrialRequests.ts) — чтобы забирать список заявок, обновлять статусы и т.д.
Подключение к уже существующей логике
Сейчас форма TrialRequestPage отправляет данные в /api/trial-requests и сохраняет их в таблице trial_requests. Нужно убедиться, что новая вкладка «Воронка продаж» берёт данные именно из этой таблицы.
При смене статуса заявки или других обновлениях должна быть реализация в /api/trial-requests/:id (PATCH/PUT) — обновлять запись в БД.
Шаги, которые нужно реализовать:
Создать новую страницу SalesFunnelPage.tsx (или FunnelPage.tsx) в папке pages, добавить маршрут /sales-funnel.
В боковом меню (Navbar / Sidebar) добавить ссылку «Воронка продаж», ведущую на /sales-funnel.
Создать компонент RequestsTable.tsx, который будет принимать список заявок и отображать их в виде таблицы.
В хук useTrialRequests.ts (или в сервис) добавить функции:
getAllTrialRequests() — получение всех заявок из /api/trial-requests.
updateTrialRequestStatus(id, newStatus) — обновление статуса заявки.
(Опционально) getTrialRequestById(id) — если нужно открывать детальную карточку.
В SalesFunnelPage:
Использовать useTrialRequests для загрузки всех заявок.
Хранить в локальном состоянии выбранный фильтр/статус, если нужно.
Передавать список заявок в RequestsTable.tsx.
В RequestsTable.tsx:
Для каждой заявки показывать нужные поля (ребёнок, родитель, секция, телефон и т.д.).
Кнопку/выпадающий список для изменения статуса — при клике вызывает updateTrialRequestStatus.
Реализовать обновление статуса — после вызова updateTrialRequestStatus (через useMutation), обновлять кэш trial-requests (invalidateQueries), чтобы таблица сама перерисовывалась.
Дополнительные детали:
Предусмотреть в коде обработку ошибок (если не удалось получить заявки, если не удалось обновить статус и т.п.).
При желании — добавить базовый поиск по ФИО ребёнка или телефону.
В БД поле статуса заявки может быть VARCHAR (например, enum-like: 'NEW', 'TRIAL_ASSIGNED', 'REFUSED', 'SIGNED'), или сделать enum/check constraint.
Формат кода и структура
Хочу, чтобы итоговый код был по аналогии с другими страницами: одна страница = один компонент (например, SalesFunnelPage.tsx), внутри папки pages/sales-funnel/ можно создать components/RequestsTable.tsx, hooks/useTrialRequests.ts и т.п.
Названия можно менять по своему усмотрению, главное — чтобы итоговая структура была логична, а код не «разрастался» в один огромный файл.
Задача:

Создать новую вкладку «Воронка продаж» в боковом меню.
Сделать страницу SalesFunnelPage с таблицей заявок (RequestsTable).
Реализовать логику получения и обновления заявок (hук useTrialRequests.ts).
Обеспечить возможность менять статус заявки и видеть изменения сразу (invalidate queries).
Сразу провести рефакторинг: вынести запросы и CRUD в отдельный сервис/хук, разделить UI и логику.
Пожалуйста, реализуй всё это последовательно, по шагам, сохрани стиль и подход, который уже используется в проекте (React + React Query + папка pages и т.д.), и избегай написания огромного файла, разбей на несколько более управляемых компонентов и хуков.

Спасибо!