// –ü—Ä–æ—Å—Ç–æ–π —Å–µ—Ä–≤–µ—Ä –±–µ–∑ Vite –¥–ª—è –æ–±—Ö–æ–¥–∞ –ø—Ä–æ–±–ª–µ–º —Å –¥–æ—Å—Ç—É–ø–æ–º –≤ Replit
import express from 'express';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';
import fs from 'fs';

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const app = express();
const PORT = 3333; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤

// –ë–∞–∑–æ–≤—ã–µ middleware
app.use(express.json());
app.use(express.static(join(__dirname, '../client/public')));

// CORS –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
app.use((req, res, next) => {
  res.header('Access-Control-Allow-Origin', '*');
  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');
  
  if (req.method === 'OPTIONS') {
    return res.sendStatus(200);
  }
  
  next();
});

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
app.use('/static', express.static(join(__dirname, '../client/public')));

// API –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
app.get('/api/status', (req, res) => {
  res.json({
    status: 'ok',
    message: '–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç',
    time: new Date().toISOString()
  });
});

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (–¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏)
app.get('/api/files', (req, res) => {
  const publicDir = join(__dirname, '../client/public');
  
  try {
    const files = fs.readdirSync(publicDir);
    res.json({
      directory: publicDir,
      files: files
    });
  } catch (error) {
    res.status(500).json({
      error: '–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏',
      message: error.message
    });
  }
});

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º HTML
app.get('/:filename', (req, res) => {
  const { filename } = req.params;
  const filePath = join(__dirname, '../client/public', `${filename}.html`);
  
  if (fs.existsSync(filePath)) {
    res.sendFile(filePath);
  } else {
    res.status(404).send(`–§–∞–π–ª ${filename}.html –Ω–µ –Ω–∞–π–¥–µ–Ω`);
  }
});

// –û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç - –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—Å—Ç–æ–π HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—ã
app.get('/', (req, res) => {
  const htmlPath = join(__dirname, '../client/public/fallback.html');
  
  if (fs.existsSync(htmlPath)) {
    res.sendFile(htmlPath);
  } else {
    res.send(`
      <!DOCTYPE html>
      <html>
      <head>
        <title>–°–ø–æ—Ä—Ç–®–∫–æ–ª–∞ CRM</title>
        <style>
          body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
          h1 { color: #0066ff; }
          .card { border: 1px solid #ddd; padding: 20px; margin: 20px 0; border-radius: 5px; }
          .btn { display: inline-block; background: #0066ff; color: white; padding: 10px 20px; 
                text-decoration: none; border-radius: 5px; margin-right: 10px; }
        </style>
      </head>
      <body>
        <h1>–°–ø–æ—Ä—Ç–®–∫–æ–ª–∞ CRM</h1>
        <div class="card">
          <h2>–°—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∏—Å—Ç–µ–º—ã</h2>
          <p>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ —Å—Å—ã–ª–∫–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–∞–∑–ª–∏—á–Ω—ã–º —á–∞—Å—Ç—è–º —Å–∏—Å—Ç–µ–º—ã:</p>
          <p>
            <a href="/direct-entry" class="btn">–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞</a>
            <a href="/standalone-app" class="btn">–ê–≤—Ç–æ–Ω–æ–º–Ω–∞—è –≤–µ—Ä—Å–∏—è</a>
            <a href="/fallback" class="btn">–ó–∞–ø–∞—Å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</a>
          </p>
        </div>
        <div class="card">
          <h2>–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞</h2>
          <p>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã:</p>
          <p>
            <a href="/api/status" class="btn">–ü—Ä–æ–≤–µ—Ä–∫–∞ API</a>
            <a href="/api/files" class="btn">–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤</a>
          </p>
        </div>
      </body>
      </html>
    `);
  }
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, '0.0.0.0', () => {
  console.log(`
  ==============================================
  üöÄ –ü—Ä—è–º–æ–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}
  
  –î–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ:
  http://localhost:${PORT}/
  
  –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞:
  - http://localhost:${PORT}/direct-entry (–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞)
  - http://localhost:${PORT}/standalone-app (–ê–≤—Ç–æ–Ω–æ–º–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)
  - http://localhost:${PORT}/fallback (–ó–∞–ø–∞—Å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
  ==============================================
  `);
});